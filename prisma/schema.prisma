// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  email       String   @unique
  password    String
  phoneNumber String?
  address     String?
  profilePic  String?
  userType    UserType
  userStatus  UserStatus
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt  
  // services    Service[]
}


enum UserType {
  MERCHANT
  USER
  ADMIN
}


enum UserStatus {
  ACTIVE
  INACTIVE
  DEACTIVATED
}


enum ListingType{
  SELL
  RENT
  SERVICE
}

model Category {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String         @unique
  subcategories SubCategory[]
  attributes    Json?
  imageUrl      String?        // Add this
  description   String?        // Add this
}





model SubCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  subSubcategories SubSubCategory[]
}





model SubSubCategory {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  subCategoryId String? @db.ObjectId
  subCategory  SubCategory? @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  attributes   Json?
  products     Product[]
}




model Product {
  id             String  @id @default(auto()) @map("_id")   @db.ObjectId
  name           String
  subSubcategoryId String @db.ObjectId
  subSubcategory  SubSubCategory @relation(fields: [subSubcategoryId], references: [id], onDelete: Cascade)
  price          Float
  listingType    ListingType
  attributes     Json  // Inherits from Category + SubSubCategory
  imageUrl      String?        // Add this
  description   String?        // Add this
}
